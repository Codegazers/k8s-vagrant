
## DEMO_NGINX_Ingress_Controller_Session_Persistence

asciinema rec -t "DEMO_NGINX_Ingress_Controller_Session_Persistence"

# We deploy complete NGINX Plus Ingress Controller with a full deployment file

curl https://raw.githubusercontent.com/Codegazers/k8s-vagrant/master/demo/nginx-plus-ingress_full-deployment.yml | kubectl apply -f -


# We have created 'nginx-ingress' namespace so we will wait until all components are ready.

kubectl get all --namespace nginx-ingress


# We will deploy now applications with 2 pods for blue and 3 for red

curl https://raw.githubusercontent.com/Codegazers/k8s-vagrant/master/examples/colors/colors-with-health.yml | kubectl apply -f - 

# For quick access we prepare some environment variables

export INGRESS_IP=$(minikube   service -n nginx-ingress nginx-ingress --url --format "{{ .IP }}" | head -1)
export INGRESS_HTTP_PORT=$(minikube   service -n nginx-ingress nginx-ingress --url --format "{{ .Port }}" | head -1)
export INGRESS_HTTPS_PORT=$(minikube   service -n nginx-ingress nginx-ingress --url --format "{{ .Port }}" | tail -1)

# We review the deployments

kubectl get all --namespace default

kubectl get pods --namespace default


# Now we deploy colors-ingress ingress resource for accesing both applications

curl https://raw.githubusercontent.com/Codegazers/k8s-vagrant/master/examples/colors/colors-ingress-sticky.yml | kubectl apply -f -


# We have setup this resource with session persistence
# Sticky Sessions for backends
# Review ingress resource

kubectl get ingress colors-ingress -o yaml


# And now we can access our applications setting host headers

http ${INGRESS_IP}:${INGRESS_HTTP_PORT}/text Host:red.example.com

http ${INGRESS_IP}:${INGRESS_HTTP_PORT}/text Host:blue.example.com

kubectl get pods --namespace default


# We will ask just for red host header to reach red backends:

http ${INGRESS_IP}:${INGRESS_HTTP_PORT}/health Host:red.example.com

http ${INGRESS_IP}:${INGRESS_HTTP_PORT}/health Host:red.example.com

http ${INGRESS_IP}:${INGRESS_HTTP_PORT}/health Host:red.example.com


# As we have seen, no persistence has been made because we haven't set any session

# Now we will use same session for each request to reach always the same backend
 
http --session red ${INGRESS_IP}:${INGRESS_HTTP_PORT}/text Host:red.example.com

http --session red ${INGRESS_IP}:${INGRESS_HTTP_PORT}/text Host:red.example.com




## Asciinema recorded

https://asciinema.org/a/lGHTS2dyIxHORWOLt90LRzN3b
